from django.contrib.auth import get_user_model
from rest_framework import serializers
from calendarapp.models import Event,  EventMember
from calendarapp.models.event import Tables, UserEventStats


class TablesSerializer(serializers.ModelSerializer):
    class Meta:
        model = Tables
        fields = ['id', 'number', 'price_per_hour', 'price_per_half_hour', 'table_description']


class UserSerializer(serializers.ModelSerializer):
    class Meta:
        model = get_user_model()
        fields = ['id', 'email', 'first_name', 'last_name']


class EventMemberSerializer(serializers.ModelSerializer):
    user = UserSerializer()

    class Meta:
        model = EventMember
        fields = ['id', 'user', 'created_at']


class EventSerializer(serializers.ModelSerializer):
    user = UserSerializer(read_only=True)
    table = TablesSerializer(read_only=True)
    table_id = serializers.PrimaryKeyRelatedField(
        queryset=Tables.objects.all(),
        source='table',
        write_only=True
    )
    members = EventMemberSerializer(many=True, read_only=True)

    class Meta:
        model = Event
        fields = [
            'id', 'user', 'title', 'description', 'start_time', 'end_time',
            'total_cost', 'payment_status', 'is_canceled', 'cancel_reason',
            'payment_id', 'table', 'table_id', 'total_time', 'is_paid',
            'created_at', 'updated_at', 'members'
        ]
        read_only_fields = [
            'total_cost', 'payment_status', 'is_paid', 'created_at',
            'updated_at', 'total_time', 'payment_id'
        ]


class PaymentCreateSerializer(serializers.Serializer):
    title = serializers.CharField(max_length=200)
    description = serializers.CharField(required=False, allow_blank=True)
    start_time = serializers.DateTimeField()
    end_time = serializers.DateTimeField()
    table_id = serializers.PrimaryKeyRelatedField(queryset=Tables.objects.all())
    event_id = serializers.IntegerField(required=False)


class PaymentStatusSerializer(serializers.Serializer):
    status = serializers.CharField()
    payment_id = serializers.CharField()
    confirmation_url = serializers.URLField()


class UserEventStatsSerializer(serializers.ModelSerializer):
    user = UserSerializer()
    table = TablesSerializer()

    class Meta:
        model = UserEventStats
        fields = ['id', 'user', 'table', 'total_time', 'total_cost', 'total_events']




class TableStatSerializer(serializers.Serializer):
    table_number = serializers.IntegerField()
    daily_income = serializers.DecimalField(max_digits=10, decimal_places=2)
    monthly_income = serializers.DecimalField(max_digits=10, decimal_places=2)
    past_month_income = serializers.DecimalField(max_digits=10, decimal_places=2)
    total_bookings_today = serializers.IntegerField()
    total_bookings_month = serializers.IntegerField()

class AdminStatsSerializer(serializers.Serializer):
    table_stats = TableStatSerializer(many=True)
    total_daily_income = serializers.DecimalField(max_digits=10, decimal_places=2)
    total_monthly_income = serializers.DecimalField(max_digits=10, decimal_places=2)
    total_past_month_income = serializers.DecimalField(max_digits=10, decimal_places=2)
    months = serializers.ListField(child=serializers.IntegerField())
    years = serializers.ListField(child=serializers.IntegerField())
    current_month = serializers.IntegerField()
    current_year = serializers.IntegerField()


class EventListSerializer(serializers.ModelSerializer):
    table = TablesSerializer(read_only=True)
    user = UserSerializer(read_only=True)
    payment_status_display = serializers.CharField(
        source='get_payment_status_display',
        read_only=True
    )

    class Meta:
        model = Event
        fields = [
            'id', 'title', 'description', 'start_time', 'end_time',
            'table', 'user', 'total_cost', 'payment_status',
            'payment_status_display', 'is_paid', 'is_canceled',
            'created_at'
        ]

class UserBookingStatsSerializer(serializers.ModelSerializer):
    table = TablesSerializer()
    payment_status_display = serializers.CharField(source='get_payment_status_display')

    class Meta:
        model = Event
        fields = [
            'id', 'title', 'start_time', 'end_time', 'table',
            'total_cost', 'payment_status', 'payment_status_display',
            'is_paid', 'is_canceled', 'created_at'
        ]


class UserStatsSerializer(serializers.Serializer):
    total_bookings = serializers.IntegerField()
    total_spent = serializers.DecimalField(max_digits=10, decimal_places=2)
    upcoming_bookings = UserBookingStatsSerializer(many=True)
    past_bookings = UserBookingStatsSerializer(many=True)
    favorite_table = TablesSerializer(allow_null=True)